<h1>دستور rm</h1>
<h2>دستور حذف فایل یا پوشه ها</h2>
<p>
    توی بخش قبلی اومدیم گفتیم چجوری میشه فولدر رو پاک کرد، اونم تازه فولدری که خالی باشه! در 99 درصد مواقع فایل و فولدرهای ما خالی نیستن!
    پس اونوقته که نیاز به یه دستور جدید داریم! اسم این دستور rm عه که مخفف همون remove عه.
    ساده ترین شکل استفادش به شکل زیره:
</p>
<pre>
    <code>
        rm file1
    </code>
</pre>
<b>
   اینو حتما پس ذهنتون داشته باشید! چیو؟ اینکه ما توی ترمینال سطل زباله جادویی نداریم! پس یعنی وقتی فایل رو پاک کردی
    باید کلا باهاش خدافسی کنی! پس حواست باشه چجوری و کی داری از این دستور استفاده میکنی!
</b>
<p>
    خوشبختانه لینوکس یه چنتا کار امنیتی کرده! یعنی یه کاربر معمولی نمیتونه فایل های مهم رو همینجوری پاک کنه! ولی خب برای فایل های خودتون
    همچین ویژگی نزاشته (متاسفانه)، همچنین اگه یه فایل دسترسی نوشته شدن نداشته باشه هم نمیزاره اون فایل رو پاک کنید. (در مورد دسترسی هر فایل هم بعدا صحبت میکنیم)
    <br>
    حالا فرض کنید، که حتما میخواید یه فایل رو پاک کنید و لینوکس بهتون اجازه نمیده، اینجاست که یه فلگ داریم به نام f که مخفف force عه، کارش اینه که
    حتما براتون اون فایل رو پاک میکنه!
    مثل زیر:
</p>
<pre>
    <code>
        rm -f flanFile flanFile2
    </code>
</pre>
<p>
    مثل خیلی از دستورات دیگه، این دستور هم فلگ i داره و ازتون قبل از انجام کار میپرسه! تا شاید نظرتون عوض بشه...
    <br>
    حالا فرض کنید میخواید یه پوشه رو پاک کنید که خالی نیست! خب صد در صد که نمیتونید از rmdir استفاده کنید، پس میمونه rm، ولی وقتی این کارو میکنید یدفعه جواب میاد که این پوشه پُره!
    برای اینکه بتونید یه پوشه پُر رو پاک کنید باید از فلگ r استفاده کنید که مخفف recursive عه، معنیش هم میشه بازگشتی!
</p>
<pre>
    <code>
        rm -r folderName
    </code>
</pre>
<p>
    به صورت منطقی هم بخوایم بهش نگاه کنیم، خیلی ساده است! برای اینکه یه پوشه رو پاک کنید، باید محتویات اون پوشه رو هم پاک کنید! اینجاست که از فلگ r استفاده میکنیم
    و این یعنی به صورت بازگشتی (توابع بازگشتی رو یه سرچ بزنید) محتوا رو براتون پاک میکنه.
</p>